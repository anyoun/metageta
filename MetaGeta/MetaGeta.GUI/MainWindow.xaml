<Window
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    x:Class="MetaGeta.GUI.MainWindow" x:Name="MainWindowControl" Title="MetaGeta"
    Height="651" Width="932" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:GUI="clr-namespace:MetaGeta.GUI"
    mc:Ignorable="d" SnapsToDevicePixels="True">

    <Window.Resources>

        <DataTemplate DataType="{x:Type GUI:NavigationTab}">
            <StackPanel Orientation="Horizontal" Margin="7,0,0,0">
                <Image Source="{Binding Path=Icon}" Width="16" Height="16" RenderOptions.BitmapScalingMode="NearestNeighbor" d:UseSampleData="True"/>
                <TextBlock Text="{Binding Path=Caption}" Padding="5,2,0,4" HorizontalAlignment="Center" VerticalAlignment="Center" d:UseSampleData="True"/>
            </StackPanel>
        </DataTemplate>

        <HierarchicalDataTemplate DataType="{x:Type GUI:NavigationTabGroupBase}" ItemsSource="{Binding Path=Children}">
            <StackPanel Orientation="Horizontal" Margin="2">
                <Image Source="{Binding Path=Icon}" Width="16" Height="16" VerticalAlignment="Center" RenderOptions.BitmapScalingMode="NearestNeighbor"/>
                <TextBlock Text="{Binding Path=Caption}"  FontSize="16" FontWeight="Bold" Margin="5,0" VerticalAlignment="Center" />
                <Rectangle Height="1" Fill="Blue" VerticalAlignment="Center" />
            </StackPanel>
        </HierarchicalDataTemplate>

        <PathGeometry x:Key="TreeArrow">
            <PathGeometry.Figures>
                <PathFigureCollection>
                    <PathFigure IsFilled="True" StartPoint="0 0" IsClosed="True">
                        <PathFigure.Segments>
                            <PathSegmentCollection>
                                <LineSegment Point="0 6"/>
                                <LineSegment Point="6 0"/>
                            </PathSegmentCollection>
                        </PathFigure.Segments>
                    </PathFigure>
                </PathFigureCollection>
            </PathGeometry.Figures>
        </PathGeometry>

        <PathGeometry x:Key="Plus">
            <PathGeometry.Figures>
                M-1,-1 -3,-1 -3,1 -1,1 -1,3 1,3 1,1 3,1 3,-1 1,-1 1,-3 -1,-3 z
            </PathGeometry.Figures>
        </PathGeometry>

        <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Width" Value="16"/>
            <Setter Property="Height" Value="16"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Width="16" Height="16" Background="Transparent" Padding="5,5,5,5">
                            <Path x:Name="ExpandPath" Fill="Transparent" Stroke="#FF989898"  Data="{StaticResource TreeArrow}">
                                <Path.RenderTransform>
                                    <RotateTransform Angle="135" CenterX="3" CenterY="3"/>
                                </Path.RenderTransform>
                            </Path>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver"  Value="True">
                                <Setter TargetName="ExpandPath" Property="Stroke" Value="#FF1BBBFA"/>
                                <Setter TargetName="ExpandPath"  Property="Fill" Value="Transparent"/>
                            </Trigger>

                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="ExpandPath" Property="RenderTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="180" CenterX="3" CenterY="3"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="ExpandPath" Property="Fill" Value="#FF595959"/>
                                <Setter TargetName="ExpandPath" Property="Stroke" Value="#FF262626"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TreeViewItemFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="{x:Type TreeViewItem}" TargetType="{x:Type TreeViewItem}">
            <Setter Property="IsExpanded" Value="True"/>
            <Setter Property="Background"  Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="1,0,0,0"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="19"  Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <ToggleButton x:Name="Expander"
                                      Style="{StaticResource ExpandCollapseToggleStyle}"
                                      IsChecked="{Binding Path=IsExpanded,RelativeSource={RelativeSource TemplatedParent}}"
                                      ClickMode="Press"/>
                            <Border Name="Bd"
                                Grid.Column="0" Grid.ColumnSpan="3"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="true"/>

                            <ContentPresenter x:Name="PART_Header"
                                              ContentSource="Header"
                                              Grid.Column="1" Grid.ColumnSpan="2"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>

    <DockPanel x:Name="DockPanel1">
        <Grid x:Name="LeftHandGrid" DockPanel.Dock="Left" Width="200">
            <TreeView x:Name="lbDataStores" Margin="6,6,6,34" 
                      ItemsSource="{Binding Path=Tabs}"                     
                      PreviewMouseDown="lbDataStores_PreviewMouseDown" SelectedValuePath=""
                     />

            <Button x:Name="btnNewDataStore" Margin="6,0,96,6" VerticalAlignment="Bottom" Height="24" Command="{Binding NewDataStoreCommand}">
                <StackPanel Orientation="Horizontal" >
                    <Path Height="16" Width="16" Stretch="Fill" Data="{StaticResource Plus}" Margin="0,0,5,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <Path.Stroke>
                            <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ControlDarkDarkColorKey}}"/>
                        </Path.Stroke>
                        <Path.Fill>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="{DynamicResource {x:Static SystemColors.ControlDarkColorKey}}" Offset="0"/>
                                <GradientStop Color="{DynamicResource {x:Static SystemColors.ControlLightColorKey}}" Offset="0.486"/>
                                <GradientStop Color="{DynamicResource {x:Static SystemColors.ControlDarkColorKey}}" Offset="0.506"/>
                                <GradientStop Color="{DynamicResource {x:Static SystemColors.ControlDarkDarkColorKey}}" Offset="1"/>
                            </LinearGradientBrush>
                        </Path.Fill>
                    </Path>
                    <TextBlock Text="Add Library" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                </StackPanel>
            </Button>
        </Grid>

        <ContentControl x:Name="CurrentViewContentControl" 
                        Content="{Binding ElementName=lbDataStores, Path=SelectedItem}"
                        >
            <ContentControl.Resources>

                <DataTemplate DataType="{x:Type GUI:NullViewModel}">
                    <GUI:NullView/>
                </DataTemplate>

                <DataTemplate DataType="{x:Type GUI:JobQueueViewModel}">
                    <GUI:JobQueueView/>
                </DataTemplate>

                <DataTemplate DataType="{x:Type GUI:DataStoreConfigurationViewModel}">
                    <GUI:DataStoreConfigurationView/>
                </DataTemplate>

                <DataTemplate DataType="{x:Type GUI:GridViewModel}">
                    <GUI:GridView/>
                </DataTemplate>

                <DataTemplate DataType="{x:Type GUI:ImportStatusViewModel}">
                    <GUI:ImportStatusView/>
                </DataTemplate>

                <DataTemplate DataType="{x:Type GUI:TvShowViewModel}">
                    <GUI:TvShowView/>
                </DataTemplate>

            </ContentControl.Resources>
        </ContentControl>
    </DockPanel>
</Window>
